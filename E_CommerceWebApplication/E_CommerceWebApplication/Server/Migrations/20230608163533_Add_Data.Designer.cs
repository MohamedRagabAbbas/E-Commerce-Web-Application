// <auto-generated />
using System;
using E_CommerceWebApplication.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_CommerceWebApplication.Server.Migrations
{
    [DbContext(typeof(DBContextClass))]
    [Migration("20230608163533_Add_Data")]
    partial class Add_Data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_CommerceWebApplication.Shared.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("E_CommerceWebApplication.Shared.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("E_CommerceWebApplication.Shared.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("ProductAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductDiscount")
                        .HasColumnType("float");

                    b.Property<string>("ProductGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("ProductRating")
                        .HasColumnType("int");

                    b.Property<string>("ProductSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductAvailable = true,
                            ProductBrandId = 1,
                            ProductCategoryId = 1,
                            ProductColor = "Red",
                            ProductDescription = "This is the description for Product 1.",
                            ProductDiscount = 10.0,
                            ProductGender = "Unisex",
                            ProductImageUrl = "https://example.com/product1.jpg",
                            ProductMaterial = "Cotton",
                            ProductName = "Product 1",
                            ProductPrice = 9.9900000000000002,
                            ProductQuantity = 100,
                            ProductRating = 4,
                            ProductSize = "Medium"
                        },
                        new
                        {
                            Id = 2,
                            ProductAvailable = true,
                            ProductBrandId = 2,
                            ProductCategoryId = 2,
                            ProductColor = "Blue",
                            ProductDescription = "This is the description for Product 2.",
                            ProductDiscount = 15.0,
                            ProductGender = "Men",
                            ProductImageUrl = "https://example.com/product2.jpg",
                            ProductMaterial = "Polyester",
                            ProductName = "Product 2",
                            ProductPrice = 19.989999999999998,
                            ProductQuantity = 50,
                            ProductRating = 5,
                            ProductSize = "Large"
                        },
                        new
                        {
                            Id = 3,
                            ProductAvailable = true,
                            ProductBrandId = 3,
                            ProductCategoryId = 1,
                            ProductColor = "Green",
                            ProductDescription = "This is the description for Product 3.",
                            ProductDiscount = 20.0,
                            ProductGender = "Women",
                            ProductImageUrl = "https://example.com/product3.jpg",
                            ProductMaterial = "Silk",
                            ProductName = "Product 3",
                            ProductPrice = 14.99,
                            ProductQuantity = 75,
                            ProductRating = 4,
                            ProductSize = "Small"
                        },
                        new
                        {
                            Id = 4,
                            ProductAvailable = true,
                            ProductBrandId = 2,
                            ProductCategoryId = 3,
                            ProductColor = "Black",
                            ProductDescription = "This is the description for Product 4.",
                            ProductDiscount = 10.0,
                            ProductGender = "Men",
                            ProductImageUrl = "https://example.com/product4.jpg",
                            ProductMaterial = "Leather",
                            ProductName = "Product 4",
                            ProductPrice = 29.989999999999998,
                            ProductQuantity = 30,
                            ProductRating = 3,
                            ProductSize = "Medium"
                        },
                        new
                        {
                            Id = 5,
                            ProductAvailable = true,
                            ProductBrandId = 1,
                            ProductCategoryId = 2,
                            ProductColor = "White",
                            ProductDescription = "This is the description for Product 5.",
                            ProductDiscount = 5.0,
                            ProductGender = "Women",
                            ProductImageUrl = "https://example.com/product5.jpg",
                            ProductMaterial = "Cotton",
                            ProductName = "Product 5",
                            ProductPrice = 24.989999999999998,
                            ProductQuantity = 60,
                            ProductRating = 4,
                            ProductSize = "Large"
                        },
                        new
                        {
                            Id = 6,
                            ProductAvailable = false,
                            ProductBrandId = 3,
                            ProductCategoryId = 3,
                            ProductColor = "Yellow",
                            ProductDescription = "This is the description for Product 6.",
                            ProductDiscount = 0.0,
                            ProductGender = "Unisex",
                            ProductImageUrl = "https://example.com/product6.jpg",
                            ProductMaterial = "Polyester",
                            ProductName = "Product 6",
                            ProductPrice = 39.990000000000002,
                            ProductQuantity = 20,
                            ProductSize = "Small"
                        },
                        new
                        {
                            Id = 7,
                            ProductAvailable = true,
                            ProductBrandId = 2,
                            ProductCategoryId = 1,
                            ProductColor = "Blue",
                            ProductDescription = "This is the description for Product 7.",
                            ProductDiscount = 5.0,
                            ProductGender = "Men",
                            ProductImageUrl = "https://example.com/product7.jpg",
                            ProductMaterial = "Cotton",
                            ProductName = "Product 7",
                            ProductPrice = 49.990000000000002,
                            ProductQuantity = 10,
                            ProductRating = 4,
                            ProductSize = "Large"
                        },
                        new
                        {
                            Id = 8,
                            ProductAvailable = true,
                            ProductBrandId = 1,
                            ProductCategoryId = 2,
                            ProductColor = "Red",
                            ProductDescription = "This is the description for Product 8.",
                            ProductDiscount = 10.0,
                            ProductGender = "Women",
                            ProductImageUrl = "https://example.com/product8.jpg",
                            ProductMaterial = "Polyester",
                            ProductName = "Product 8",
                            ProductPrice = 11.99,
                            ProductQuantity = 80,
                            ProductRating = 3,
                            ProductSize = "Medium"
                        },
                        new
                        {
                            Id = 9,
                            ProductAvailable = true,
                            ProductBrandId = 3,
                            ProductCategoryId = 1,
                            ProductColor = "Green",
                            ProductDescription = "This is the description for Product 9.",
                            ProductDiscount = 15.0,
                            ProductGender = "Unisex",
                            ProductImageUrl = "https://example.com/product9.jpg",
                            ProductMaterial = "Cotton",
                            ProductName = "Product 9",
                            ProductPrice = 16.989999999999998,
                            ProductQuantity = 70,
                            ProductRating = 5,
                            ProductSize = "Large"
                        },
                        new
                        {
                            Id = 10,
                            ProductAvailable = true,
                            ProductBrandId = 2,
                            ProductCategoryId = 3,
                            ProductColor = "Black",
                            ProductDescription = "This is the description for Product 10.",
                            ProductDiscount = 20.0,
                            ProductGender = "Men",
                            ProductImageUrl = "https://example.com/product10.jpg",
                            ProductMaterial = "Leather",
                            ProductName = "Product 10",
                            ProductPrice = 21.989999999999998,
                            ProductQuantity = 40,
                            ProductRating = 4,
                            ProductSize = "Medium"
                        });
                });

            modelBuilder.Entity("E_CommerceWebApplication.Shared.Models.Product", b =>
                {
                    b.HasOne("E_CommerceWebApplication.Shared.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("E_CommerceWebApplication.Shared.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_CommerceWebApplication.Shared.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_CommerceWebApplication.Shared.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
